[{"/Users/hansy/coding/responsive-portfolio/src/index.js":"1","/Users/hansy/coding/responsive-portfolio/src/reportWebVitals.js":"2","/Users/hansy/coding/responsive-portfolio/src/App.js":"3","/Users/hansy/coding/responsive-portfolio/src/components/Header.js":"4","/Users/hansy/coding/responsive-portfolio/src/components/AboutMe.js":"5"},{"size":478,"mtime":1608254061592,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608253959265,"results":"8","hashOfConfig":"7"},{"size":906,"mtime":1614215059388,"results":"9","hashOfConfig":"7"},{"size":4214,"mtime":1614226919505,"results":"10","hashOfConfig":"7"},{"size":1842,"mtime":1614274660318,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n9n989",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hansy/coding/responsive-portfolio/src/index.js",[],["24","25"],"/Users/hansy/coding/responsive-portfolio/src/reportWebVitals.js",[],"/Users/hansy/coding/responsive-portfolio/src/App.js",[],"/Users/hansy/coding/responsive-portfolio/src/components/Header.js",["26"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  Button, SwipeableDrawer, List, ListItem,\n  ListItemIcon, ListItemText, Divider\n} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport MailIcon from '@material-ui/icons/Mail';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport SimCardIcon from '@material-ui/icons/SimCard';\nimport CloseIcon from '@material-ui/icons/Close';\n\n//custom material ui styling\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  muiList: {\n    padding: '0px',\n  },\n  fullList: {\n    width: 'auto',\n  },\n  menuIcon: {\n    height: '30px',\n    width: '30px',\n  },\n  menuClose: {\n    color: 'black',\n    marginLeft: '22vh',\n    height: '32px',\n    width: '32px',\n  }\n}));\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.textPrimary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.textPrimary.second,\n    },\n  },\n}))(Button);\n\nconst ColorListItem = withStyles((theme) => ({\n  root: {\n    color: theme.palette.textPrimary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.textPrimary.second,\n    },\n    height: '65px',\n  },\n}))(ListItem);\n\nfunction Header(props) {\n\n  //for styles\n  const classes = useStyles();\n\n  //hook to set state according to drawer direction\n  const [state, setState] = React.useState({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.muiList}>\n      <ColorListItem button>\n          <ListItemIcon><CloseIcon className={classes.menuClose} /></ListItemIcon>\n        </ColorListItem>\n        <Divider />\n        <ColorListItem button>\n          <ListItemIcon><StarsIcon /></ListItemIcon>\n          <ListItemText primary='About Me' />\n        </ColorListItem>\n        <Divider />\n        <ColorListItem button>\n          <ListItemIcon><ComputerIcon /></ListItemIcon>\n          <ListItemText primary='Technologies' />\n        </ColorListItem>\n        <Divider />\n        <ColorListItem button>\n          <ListItemIcon><SimCardIcon /></ListItemIcon>\n          <ListItemText primary='Projects' />\n        </ColorListItem>\n        <Divider />\n        <ColorListItem button>\n          <ListItemIcon><MailIcon /></ListItemIcon>\n          <ListItemText primary='Contact' />\n        </ColorListItem>\n        <Divider />\n      </List>\n    </div>\n  );\n\n  return (\n    <header className=\"header-container\">\n      <div className=\"header-name-container\">\n        <h1 className=\"header-name\"><span className=\"first-letter-color\">H</span>ans <span className=\"first-letter-color\">A</span>ccola</h1>\n      </div>\n      <nav className=\"header-nav-links-container\">\n        <ul className=\"header-nav-links\">\n          <li><ColorButton>About Me</ColorButton></li>\n          <li><ColorButton>Technologies</ColorButton></li>\n          <li><ColorButton>Projects</ColorButton></li>\n          <li><ColorButton>Contact</ColorButton></li>\n        </ul>\n      </nav>\n      <nav className=\"header-nav-menu-container\">\n        <div>\n          <ColorButton onClick={toggleDrawer('right', true)}><MenuRoundedIcon className={classes.menuIcon} /></ColorButton>\n          <SwipeableDrawer\n            anchor={'right'}\n            open={state['right']}\n            onClose={toggleDrawer('right', false)}\n            onOpen={toggleDrawer('right', true)}\n          >\n            {list('right')}\n          </SwipeableDrawer>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","/Users/hansy/coding/responsive-portfolio/src/components/AboutMe.js",["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":25},{"ruleId":"33","severity":1,"message":"37","line":6,"column":12,"nodeType":"35","messageId":"36","endLine":6,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":6,"column":19,"nodeType":"35","messageId":"36","endLine":6,"endColumn":27},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]